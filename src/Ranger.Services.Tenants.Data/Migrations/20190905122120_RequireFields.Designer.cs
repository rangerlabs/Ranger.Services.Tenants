// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ranger.Services.Tenants.Data;

namespace Ranger.Services.Tenants.Data
{
    [DbContext(typeof(TenantDbContext))]
    [Migration("20190905122120_RequireFields")]
    partial class RequireFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("FriendlyName")
                        .HasColumnName("friendly_name");

                    b.Property<string>("Xml")
                        .HasColumnName("xml");

                    b.HasKey("Id")
                        .HasName("pk_data_protection_keys");

                    b.ToTable("data_protection_keys");
                });

            modelBuilder.Entity("Ranger.Services.Tenants.Data.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on");

                    b.Property<string>("DatabasePassword")
                        .IsRequired()
                        .HasColumnName("database_password");

                    b.Property<string>("DatabaseUsername")
                        .IsRequired()
                        .HasColumnName("database_username");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnName("domain")
                        .HasMaxLength(28);

                    b.Property<bool>("DomainConfirmed")
                        .HasColumnName("domain_confirmed");

                    b.Property<DateTime?>("LastAccessed")
                        .HasColumnName("last_accessed");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnName("organization_name")
                        .HasMaxLength(28);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .HasMaxLength(64);

                    b.HasKey("Id")
                        .HasName("pk_tenants");

                    b.HasIndex("DatabaseUsername")
                        .IsUnique()
                        .HasName("ix_tenants_database_username");

                    b.HasIndex("Domain")
                        .IsUnique()
                        .HasName("ix_tenants_domain");

                    b.ToTable("tenants");
                });
#pragma warning restore 612, 618
        }
    }
}
